// Make sure the charset is set appropriately
@charset 'UTF-8';

// This includes all of the foundation global elements that are needed to work with any of the other files.
@import 'settings';

@import 'normalize';

@import url(http://fonts.googleapis.com/css?family=Roboto:400,100,300);

// Foundation Components
@import 'foundation/components/global';
// @import 'foundation/components/grid';
@import 'foundation/components/visibility';
//@import 'foundation/components/block-grid';
@import 'foundation/components/type';
//@import 'foundation/components/buttons';
//@import 'foundation/components/forms';
//@import 'foundation/components/button-groups';
//@import 'foundation/components/dropdown-buttons';
//@import 'foundation/components/split-buttons';
//@import 'foundation/components/flex-video';
//@import 'foundation/components/section';
//@import 'foundation/components/top-bar';
//@import 'foundation/components/orbit';
//@import 'foundation/components/reveal';
//@import 'foundation/components/joyride';
//@import 'foundation/components/clearing';
//@import 'foundation/components/alert-boxes';
//@import 'foundation/components/breadcrumbs';
//@import 'foundation/components/custom-forms';
//@import 'foundation/components/keystrokes';
//@import 'foundation/components/labels';
//@import 'foundation/components/inline-lists';
//@import 'foundation/components/pagination';
//@import 'foundation/components/panels';
//@import 'foundation/components/pricing-tables';
//@import 'foundation/components/progress-bars';
//@import 'foundation/components/side-nav';
//@import 'foundation/components/sub-nav';
//@import 'foundation/components/switch';
//@import 'foundation/components/magellan';
//@import 'foundation/components/tables';
//@import 'foundation/components/thumbs';
//@import 'foundation/components/tooltips';
//@import 'foundation/components/dropdown';

@import 'compass/css3/transform';
@import 'compass/css3/transition';
@import 'compass/css3/filter';
@import 'icons';

body {
  background-color: #222;
}

$gutter: 8px;
$block-size: 100px;
$total-width: 9;
$host-width: 2;

@function block($count, $pad: 0) {
  // @return emCalc(($block-size * $count) + ($gutter * ($count - 1)) + $pad);
  @return (($block-size * $count) + ($gutter * ($count - 1)) + $pad);
}

[data-action] {
  cursor: pointer;
}

.scbone {
  width: block(9, 0 - $gutter);
  position: relative;
  left: 50%;
  top: block(1);
  margin-left: 0 - (block(9, 0 - $gutter) / 2);
  overflow: visible;
  max-height: block(7);
  ol,
  ul {
    margin: 0;
  }
  h1,
  h2,
  h3,
  h4,
  h5 {
    margin: 0;
  }

  [data-action] {
    cursor: pointer;
    color: $primary-color;
  }

  .meta {
    font-size: small;
    span {
      display: inline-block;
      min-width: 72px;
      margin-left: 8px;
    }
  }

  .description {
    line-height: 1.2;
  }
}

.scbone .list {
  ul,
  ol {
    list-style: none;
  }
}

.scbone .description {
  line-height: 1.2;
}

.scbone .host {
  width: block($host-width);
  overflow: visible;

  .picture,
  .info,
  .subresources,
  .description {
    background-color: lighten($body-bg, 30%);
    display: block;
    position: relative;
  }
  
  .info,
  .subresources,
  .description {
    padding: $gutter;
  }
  
  .block-h {
    overflow: hidden;
    width: block($host-width + 1);
    height: block(1);
  }
  
  .picture,
  .info {
    float: left;
    height: block(1);
  }

  .block-h,
  .subresources {
    height: block(1);
    margin-bottom: $gutter;
  }

  .picture {
    width: block(1);
    height: block(1);
    margin: 0 $gutter $gutter 0;
  }

  .info {
    width: block($host-width);
    // float: left;
  }

  .full-name,
  .city,
  .country {
    font-size: small;
  }

  .username {
    display: block;
    text-transform: uppercase;
    margin-bottom: $gutter;
  }
  .full-name {
    display: block;
    margin-bottom: $gutter;
  }

  .subresources {
    list-style: none;
    overflow: hidden;
    font-size: small;
  }
  
  .description {
    max-height: block(3);
    min-height: block(0.5);
  }
}

.scbone .scope.user {
  position: absolute;
  top: block(0.5, $gutter);
  width: block($total-width - ($host-width + 1), 0 - $gutter);
  left: block($host-width + 1, $gutter);

  .block-h {
    overflow: hidden;
    width: 100%;
    height: block(1);
    margin-bottom: $gutter;
  }

  .info,
  .subresources,
  .description {
    display: block;
    padding: $gutter;
    background-color: lighten($body-bg, 20%);
  }

  .picture,
  .info {
    display: inline;
    float: left;
  }

  .picture {
    width: block(1);
    height: block(1);
    margin-right: $gutter;
  }

  .info {
    height: block(1);
    width: block($total-width - ($host-width + 2), 0 - $gutter);
  }

  .username {
    display: block;
    margin-bottom: $gutter;
    text-transform: uppercase;
  }

  .subresources {
    height: block(0.5);
    text-align: center;
    margin: 0 0 $gutter 0;
    font-size: small;
    li {
      line-height: block(0.5, 0 - ($gutter * 2));
      padding: 0 ($gutter / 0.5);
      display: inline-block;
    }
  }

  .description {
    min-height: block(1);
  }
}

.scbone .player {
  position: absolute;
  top: block(1, $gutter);
  left: block($host-width, $gutter);
  width: block($total-width - $host-width, 0 - $gutter);
  min-height: block(2);
  z-index: 99;

  .progress,
  .controls,
  .logos {
    width: block(1);
    background-color: $body-bg;
    position: absolute;
    left: 0;
  }

  .progress,
  canvas {
    height: block(1);
  }

  .progress {
    cursor: pointer;
    top: block(0.5, $gutter);
  }

  .controls,
  .logos {
    height: block(0.5);
  }
  
  .controls {
    top: 0;
    button {
      position: relative;
      width: 50%;
      float: left;
      height: block(0.5);
      background: none;
      color: $primary-color;
      border: none; 
    }
  }

  .logos {
    top: block(1.5, $gutter);
    text-align: center;
  }

  .tracks {
    position: relative;
    left: block(1, $gutter);
    width: block($total-width - ($host-width + 1), 0 - $gutter);
    max-height: block(4);
    overflow: auto;

    background-color: #fff;
  }
}

$actions-width: (32 - ($gutter * 1));
.scbone .tracks {
  position: absolute;
  top: 0;
  left: block($host-width + 1, $gutter);
  width: block($total-width - ($host-width + 1), 0 - $gutter);

  li {
    background-color: $body-bg;
    margin-bottom: $gutter;
    overflow: hidden;
    position: relative;

    height: block(0.5);
    padding: 0 $gutter;

    @include transition(padding-right 0.3s, height 0.3s);

    &:last-child {
      margin-bottom: 0;
    }

    &:hover {
      padding: 0 block(1, $gutter) 0 $gutter;
      height: block(1);
      .artwork {
        height: block(1);
        opacity: 1;
      }
      .title {
        max-height: 2em;
      }
    }

    &.no-artwork,
    &.current {
      padding: 0 $gutter;
    }
    &.current {
      height: block(1);
      background-color: lighten($body-bg, 20%);
      .artwork {
        display: none;
      }
    }
  }
  
  .artwork {
    position: absolute;
    top: 0;
    right: 0;
    opacity: 0;
    height: block(0.5);
    @include transition(opacity 0.3s, height 0.3s);
  }

  .title {
    font-size: emCalc(16px);
    font-weight: $header-font-weight;
    position: relative;
    padding: $gutter 0;
    margin: 0;
    min-height: block(0.5);
    display: block;

    .actions,
    a {
      display: block;
      height: 28px;
      line-height: 28px;
    }

    .actions {
      position: absolute;
      width: 28px;
      top: $gutter;
      left: 0;
    }
    
    a {
      text-transform: uppercase;
      max-height: 28px;
      margin-left: 28px;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
  }

  .release,
  .meta {
    font-size: small;
    margin-left: 28px;
  }

  .meta {
    margin-top: 4px;
    span, 
    a {
      display: inline-block;
      min-width: 40px;
      margin: 0 4px 0 0;
    }
  }
}

.scbone .users {

}

.scbone .comments {

}

.scbone {
  &.host-tracks,
  &.host-users,
  &.guest-tracks,
  &.guest-users {
    .player {
      width: block(1);
      max-height: block(2);
      overflow: hidden;
      &:hover {
        z-index: 99;
        max-height: block(4);
        width: block($total-width - $host-width, 0 - $gutter);
      }
    }
  }
  &.player,
  &.tracks {
    .scope.user,
    .scope.group {
      display: none;
    }
  }
}